import re

def initial_pos_tagger(words):
    tags = []
    for word in words:
        if re.fullmatch(r'\d+', word):
            tags.append((word, 'NUM'))
        elif word.endswith('ing'):
            tags.append((word, 'VERB'))
        elif word.endswith('ed'):
            tags.append((word, 'VERB'))
        elif word.endswith('s') and word.lower() not in ["is", "was"]:  # Plural nouns (not verbs)
            tags.append((word, 'NOUN'))
        else:
            tags.append((word, 'NOUN'))  # Default tag
    return tags

def apply_transformation_rules(tagged_words):
    transformed = []
    for i, (word, tag) in enumerate(tagged_words):
        if word in ["is", "was"]:
            tag = "VERB"
        elif word.lower() == "the":
            tag = "DET"
        transformed.append((word, tag))
    return transformed

sentence = "The cat is running in the garden"
words = sentence.split()

initial_tags = initial_pos_tagger(words)

final_tags = apply_transformation_rules(initial_tags)

print(final_tags)
